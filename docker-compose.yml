version: "3.8"

services :
  db:
    image: postgres:14.2
    container_name: postgres
    volumes:
      - ${POSTGRES_DB_LOCAL_PATH}:/var/lib/postgresql/data  #use local volume for prod
    env_file: ./.env
    ports: 
      - ${POSTGRES_DB_PORT}:5432
  
  mongo:
    image: mongo:5.0
    container_name: ${MONGO_CONTAINER_NAME}
    volumes:
      - ${MONGO_DB_LOCAL_PATH}:/data/db
      - ${MONGO_INIT_JS_PATH}:/docker-entrypoint-initdb.d/init-mongo.js:ro
    env_file: ./.env
    ports:
      - ${MONGO_DB_PORT}:27017

  
  cache:
    # restart: always
    # image: redis:7.0
    image: myredis
    privileged: true
    command: sh -c "./init.sh"
    container_name: ${REDIS_CONTAINER_NAME}
    build:
      context: ./redis/
    sysctls:
      - net.core.somaxconn=512
      # - vm.overcommit_memory=1
    env_file: ./.env
    ports:
      - "${REDIS_PORT}:6379"
    # command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes: 
      - cache:/data:rw

  # redis:
  #   image: redis:7.0
  #   container_name: redis_celery
  #   ports:
  #     - "${REDIS_PORT}:6379"
  # celery:
  #   restart: always
  #   container_name: celery
  #   build:
  #     context: ./server
  #   command: celery -A server worker -l INFO
  #   volumes:
  #     - "./server:/app"
  #   environment:
  #     - POSTGRES_DB_HOST=${POSTGRES_DB_HOST}
  #     - POSTGRES_DB=${POSTGRES_DB}
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - POSTGRES_DB_PORT=${POSTGRES_DB_PORT}
  #   depends_on:
  #     - db
  #     - redis
  #     - server

  server:
    image: server
    command: >
      sh -c "python3 manage.py collectstatic --noinput &&
             python3 manage.py makemigrations &&
             python3 manage.py migrate &&
             python3 manage.py migrate --database=${MONGO_DB_NAME_DJANGO} &&
             python3 manage.py runserver 0.0.0.0:8000"
    container_name: ${DJANGO_CONTAINER_NAME}
    links:
      - "cache:redis"
      - "db:postgres"
    env_file: ./.env
    build: 
      context: ./server
      #dockerfile: ./Dockerfile
    ports: 
      - "${DJANGO_PORT}:8000"
    volumes: 
      - "./server:/app"
    depends_on: 
      - db
      - cache
      # - redis
      - mongo

  client:
    image: client
    container_name: ${ANGULAR_CONTAINER_NAME}
    build: 
      context: ./client/
      #dockerfile: ./Dockerfile
    env_file: ./.env
    ports: 
      - ${ANGULAR_PORT}:${NGINX_PORT}
volumes:
  cache:
    driver: local